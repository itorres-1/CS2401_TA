
Student: Pena
Lab: 5

---------------------------- START ----------------------------

Input: [9, 0, 8, 1, 7, 2, 6, 3, 5, 4]

------------------------- rBubbleSort -------------------------

Output:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 
Sorted: true
+25 in correctness

----------------------- rSelectionSort -----------------------

Output:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 
Sorted: true
+25 in correctness

----------------------- rInsertionSort -----------------------

Output:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 
Sorted: true
+25 in correctness

------------------------- iQuickSort -------------------------

Output:[4, 0, 8, 1, 7, 2, 6, 3, 5, 9] 
Sorted: false

---------------------------- Grade ----------------------------

------------------------- BubbleSort -------------------------
9 0 8 1 7 2 6 3 5 4
0 8 1 7 2 6 3 5 4 9
0 1 7 2 6 3 5 4 8 9
0 1 2 6 3 5 4 7 8 9
0 1 2 3 5 4 6 7 8 9
0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9 ** good

------------------------ InsertionSort ------------------------
9 0 8 1 7 2 6 3 5 4
9 0 8 1 7 2 6 3 5 4
9 0 8 1 7 2 6 3 5 4
9 0 8 1 7 2 6 3 5 4
9 0 8 1 7 2 6 3 5 4
9 0 8 1 7 2 6 3 5 4
9 0 8 1 7 2 6 3 5 4
9 0 8 1 7 2 6 3 5 4
9 0 8 1 7 2 6 3 5 4
9 0 8 1 7 2 6 3 5 4  *** Explain method

------------------------ SelectionSort ------------------------
9 0 8 1 7 2 6 3 5 4
0 9 8 1 7 2 6 3 5 4
0 1 8 9 7 2 6 3 5 4
0 1 2 9 7 8 6 3 5 4
0 1 2 3 7 8 6 9 5 4
0 1 2 3 4 8 6 9 5 7
0 1 2 3 4 5 6 9 8 7
0 1 2 3 4 5 6 9 8 7
0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9
0 1 2 3 4 5 6 7 8 9  **** good

-------------------------- QuickSort --------------------------

correctness: 48


Don't overkill with exceptions
Could've been more efficient with read
better javadoc comments (method description)

